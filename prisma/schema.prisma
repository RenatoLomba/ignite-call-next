generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String             @id @default(uuid())
  username      String             @unique
  name          String
  created_at    DateTime           @default(now())
  bio           String?            @db.Text
  email         String?            @unique
  avatar_url    String?
  accounts      Account[]
  sessions      Session[]
  timeIntervals UserTimeInterval[]
  schedules     Schedule[]

  @@map("users")
}

model Account {
  id                  String  @id @default(uuid())
  type                String
  provider            String
  provider_account_id String
  refresh_token       String? @db.Text
  access_token        String? @db.Text
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String? @db.Text
  session_state       String?
  user_id             String
  user                User    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([provider, provider_account_id])
  @@map("accounts")
}

model Session {
  id            String   @id @default(uuid())
  session_token String   @unique
  expires       DateTime
  user_id       String
  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model UserTimeInterval {
  id         String @id @default(uuid())
  week_day   Int
  start_time Int
  end_time   Int
  user_id    String
  user       User   @relation(fields: [user_id], references: [id])

  @@map("user_time_intervals")
}

model Schedule {
  id           String   @id @default(uuid())
  date         DateTime
  name         String
  email        String
  observations String?
  created_at   DateTime @default(now())
  user_id      String
  user         User     @relation(fields: [user_id], references: [id])

  @@map("schedules")
}
